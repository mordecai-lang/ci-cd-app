name: CI/CD pipeline test
  on:
   push:
     branches: ["main"]
   workflow_dispatch:

  jobs:
    build-and-push:
      runs-on: ubuntu-latest
      steps:
        -name: Checkout repo
          uses: actions/checkout@v4

        -name: Log In To DockerHub
          uses: docker/login-action@v2
            with:
              username: ${{ secret.DOCKER_USERNAME }}
              password: ${{ secret.DOCKER_PASSWORD }}

        -name: Image tag
          id: vars
          run: |
            echo "IMAGE=${{ secret.DOCKER_USERNAME }}/myapp" >> $GITHUB_ENV
            echo "TAG_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

        -name: Build Image
          run: |
            docker build -t $IMAGE:latest -t IMAGE:TAG_SHA .

        -name: run container
          run: |
            docker run -d --name testapp -p 5000:5000 $IMAGE:latest
            sleep 5

        -name: Healthcheck
          run: |
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
            echo "Healthcheck status is $Status"
            if [ $STATUS -ne 200 ]; then
              echo "App healthcheck failed!"
              docker logs testapp
              exit 1
            fi

        -name: Inspect docker health
          run:
            docker inspect --format='{{json.State.Health}}' testapp

        -name: Clean up
          run: |
                docker rm -f testapp

        -name:  Push Image
          run: |
            docker push $IMAGE:latest
            docker push $IMAGE:$TAG_SHA


    deploy:
      runs-on: ubuntu-latest
      needs: build-and-push
      steps:
        -name: Deploy to server
          uses: appleboy/ssh-action@v0.1.10
          with:
            host: 192.168.80.127
            username: mordecai
            key: ${{ secret.HOST_SSH_KEY }}
            script: |
              docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              docker pull mordecai-lang/myapp:${{ needs.build-and-push.outputs.TAG_SHA }}
              docker stop myapp || true
              docker rm myapp || true
              docker run -d --name myapp -p 5000:5000 mordecai-lang/myapp:${{ needs.build-and-push.outputs.TAG_SHA }}

        -name: Health check 200 OK (remote)
          run: |
            STATUS=$(curl -s -o -w "%{http_code}" http://${{ secret.HOST_SERVER }}:5000)
            echo "Healthcheck status is $STATUS"
            if [ $STATUS -ne 200 ]; then
              echo "Remote up is down"
              exit 1
              docker logs flaskapp
            fi
        -name: Healthcheck JSON
          run: |
            curl -s http://${{ secret.HOST_SERVER }}:5000/health | grep '"status":"healthy"'


